Les administrateurs 
*ADMIN PRINCIPAL
- Le name de l'admin principal est : Admin Principal, son rôle est : admin_principal.Touts ses objets de rôle est true
-Le mail doit être valide qu format @gmail.com ou @yahoo.format
-Le téléphone doit être absolument un numéero béninois sans indicatif


*ADMIN PAR ROLE
-Seuls l'admin principal est capable de créer un autre admin en lui donnant un rôle. Dans le frontend il y aura une vérification pour voir le type de rôle de l'admin pour pourvoir restreint l'acces des liens du dashboard. 
-Les administrateurs par rôle auront acces a deux liens seuls le manager des admins qui est le manager_sup pourrait avoir acces a touts les liens sauf le liens : Compte,Administrateurs,Paramètres
-Nous avons 5 types de rôles : guide_manager,users_manager,destination_manager,circuit_manager,blog_manager
-Le name sera au format  : compte_0000000_guide_manager

*CONNEXION DES ADMINS 
/* global process */
/* global __dirname */

require("dotenv").config({ path: "./config/.env" });
require("./config/bd");
const express = require("express");
const path = require("path");
const cors = require("cors");
const helmet = require("helmet");
const cookieParser = require("cookie-parser");
const bodyParser = require("body-parser");
const admin_route = require("./routes/admin/admin.routes");
const users_route = require("./routes/users/users.routes");
const fs = require('fs')
const app = express();
const port = process.env.port;
const client_url = process.env.client_url;

// Définition des origines autorisées
// const allowedOrigins = [process.env.client_url, backend_url];
app.use(cookieParser());
app.use(helmet());
app.use(cors({ credentials: true, origin: client_url}));
app.use(bodyParser.json());
app.use(bodyParser.urlencoded({ extended: true }));


app.get("/frontend/build/assets/guide/document/:filename", (req, res) => {
  const filename = req.params.filename;
  // Récupérer le chemin complet de l'image
  const imagePath = path.join(
    __dirname,
    "./frontend/build/assets/guide/document",
    filename
  );
  // Renvoyer l'image au client
  res.sendFile(imagePath);
}); 
app.use("/v1/admin", admin_route);
app.use("/v1/users", users_route);
app.listen(port, () => {
  console.log(`Le serveur est démarrer sur le port ${port}`);
});

